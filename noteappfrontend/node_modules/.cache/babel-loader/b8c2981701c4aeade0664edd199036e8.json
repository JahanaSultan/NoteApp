{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jahana 2021\\\\Projects\\\\NoteApp\\\\noteappfrontend\\\\src\\\\pages\\\\NotePages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Navigate } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/image/chevron-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePages = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [note, setNote] = useState({});\n  useEffect(() => {\n    getNote();\n  }, [id]);\n\n  const getNote = async () => {\n    if (id === 'new') return;\n    let result = await fetch(`/api/notes/${id}`);\n    let data = await result.json();\n    setNote(data);\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  };\n\n  const handleSubmit = () => {\n    if (id !== \"new\" && !note.body) {\n      deleteNote();\n    } else if (id !== \"new\") {\n      updateNote();\n    } else if (id == \"new\" && note) {\n      createNote();\n    }\n\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onInput: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePages, \"bRKtnY7C3EaVX9C5EJd0LIMKPsk=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = NotePages;\nexport default NotePages;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePages\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Navigate","ReactComponent","ArrowLeft","NotePages","navigate","id","note","setNote","getNote","result","fetch","data","json","updateNote","method","headers","body","JSON","stringify","createNote","deleteNote","handleSubmit","e","target","value"],"sources":["D:/Jahana 2021/Projects/NoteApp/noteappfrontend/src/pages/NotePages.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate, Navigate } from \"react-router-dom\";\r\nimport {ReactComponent as ArrowLeft} from \"../assets/image/chevron-left.svg\"\r\n\r\nconst NotePages = () => {  \r\n\r\n  const navigate=useNavigate()\r\n  const { id } = useParams();\r\n  const [note, setNote] = useState({});\r\n\r\n  useEffect(() => {\r\n    getNote();\r\n  }, [id]);\r\n\r\n  const getNote = async () => {\r\n    if(id==='new') return\r\n    let result = await fetch(`/api/notes/${id}`);\r\n    let data = await result.json();\r\n    setNote(data);\r\n  };\r\n\r\n  let updateNote=async()=>{\r\n    fetch(`/api/notes/${id}/update/`,{\r\n        method:'PUT',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify(note)\r\n\r\n    })\r\n  }\r\n\r\n\r\n  let createNote=async()=>{\r\n    fetch(`/api/notes/create/`,{\r\n        method:'POST',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify(note)\r\n\r\n    })\r\n  }\r\n\r\n\r\n  let deleteNote=async()=>{\r\n    fetch(`/api/notes/${id}/delete/`,{\r\n        method:'DELETE',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    })\r\n    navigate(\"/\")\r\n  }\r\n\r\n\r\n\r\n  const handleSubmit=()=>{\r\n    if(id!==\"new\" && !note.body){\r\n        deleteNote()\r\n    }\r\n\r\n    else if(id!==\"new\"){\r\n    updateNote()}\r\n\r\n    else if(id==\"new\" && note){\r\n      createNote()\r\n    }\r\n    navigate(\"/\")\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"note\">\r\n        <div className=\"note-header\">\r\n           <h3><ArrowLeft onClick={handleSubmit}/></h3>\r\n           {id!=='new'?( <button onClick={deleteNote}>Delete</button>):(<button onClick={handleSubmit}>Done</button>)}\r\n          \r\n        </div>\r\n      <textarea onInput={e=>{setNote({...note,'body':e.target.value})}} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotePages;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}