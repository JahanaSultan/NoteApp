{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jahana 2021\\\\Projects\\\\ToDoApp\\\\todoapp\\\\src\\\\pages\\\\NotePages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, Navigate } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from \"../assets/image/chevron-left.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotePages = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const [note, setNote] = useState({});\n  useEffect(() => {\n    getNote();\n  }, [id]);\n\n  const getNote = async () => {\n    if (id === 'new') return;\n    let result = await fetch(`/api/notes/${id}`);\n    let data = await result.json();\n    setNote(data);\n  };\n\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(note)\n    });\n  };\n\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  };\n\n  const navigate = useNavigate();\n\n  const handleSubmit = () => {\n    if (id !== \"new\" && !note.body) {\n      de;\n    }\n\n    updateNote();\n    navigate(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this), id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteNote,\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({ ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotePages, \"Rv10w2kmp6NXVoJk1qhlQ5+q1x0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = NotePages;\nexport default NotePages;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotePages\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Navigate","ReactComponent","ArrowLeft","NotePages","history","id","console","log","note","setNote","getNote","result","fetch","data","json","updateNote","method","headers","body","JSON","stringify","deleteNote","navigate","handleSubmit","de","e","target","value"],"sources":["D:/Jahana 2021/Projects/ToDoApp/todoapp/src/pages/NotePages.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate, Navigate } from \"react-router-dom\";\r\nimport {ReactComponent as ArrowLeft} from \"../assets/image/chevron-left.svg\"\r\n\r\nconst NotePages = ({history}) => {\r\n  const { id } = useParams();\r\n  console.log(id)\r\n  const [note, setNote] = useState({});\r\n  useEffect(() => {\r\n    getNote();\r\n  }, [id]);\r\n  const getNote = async () => {\r\n    if(id==='new') return\r\n    let result = await fetch(`/api/notes/${id}`);\r\n    let data = await result.json();\r\n    setNote(data);\r\n  };\r\n\r\n  let updateNote=async()=>{\r\n    fetch(`/api/notes/${id}/update/`,{\r\n        method:'PUT',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        body: JSON.stringify(note)\r\n\r\n    })\r\n  }\r\n  let deleteNote=async()=>{\r\n    fetch(`/api/notes/${id}/delete/`,{\r\n        method:'DELETE',\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        }\r\n    })\r\n    navigate(\"/\")\r\n  }\r\n  const navigate=useNavigate()\r\n  const handleSubmit=()=>{\r\n    if(id!==\"new\" && !note.body){\r\n        de\r\n    }\r\n    updateNote()\r\n    navigate(\"/\")\r\n  }\r\n  return (\r\n    <div className=\"note\">\r\n        <div className=\"note-header\">\r\n           <h3><ArrowLeft onClick={handleSubmit}/></h3>\r\n           {id!=='new'?( <button onClick={deleteNote}>Delete</button>):(<button onClick={deleteNote}>Done</button>)}\r\n          \r\n        </div>\r\n      <textarea onChange={e=>{setNote({...note,'body':e.target.value})}} defaultValue={note?.body}></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotePages;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,QAAiD,kBAAjD;AACA,SAAQC,cAAc,IAAIC,SAA1B,QAA0C,kCAA1C;;;AAEA,MAAMC,SAAS,GAAG,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EAC/B,MAAM;IAAEC;EAAF,IAASP,SAAS,EAAxB;EACAQ,OAAO,CAACC,GAAR,CAAYF,EAAZ;EACA,MAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;EACAC,SAAS,CAAC,MAAM;IACda,OAAO;EACR,CAFQ,EAEN,CAACL,EAAD,CAFM,CAAT;;EAGA,MAAMK,OAAO,GAAG,YAAY;IAC1B,IAAGL,EAAE,KAAG,KAAR,EAAe;IACf,IAAIM,MAAM,GAAG,MAAMC,KAAK,CAAE,cAAaP,EAAG,EAAlB,CAAxB;IACA,IAAIQ,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAjB;IACAL,OAAO,CAACI,IAAD,CAAP;EACD,CALD;;EAOA,IAAIE,UAAU,GAAC,YAAS;IACtBH,KAAK,CAAE,cAAaP,EAAG,UAAlB,EAA4B;MAC7BW,MAAM,EAAC,KADsB;MAE7BC,OAAO,EAAE;QACL,gBAAe;MADV,CAFoB;MAK7BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;IALuB,CAA5B,CAAL;EAQD,CATD;;EAUA,IAAIa,UAAU,GAAC,YAAS;IACtBT,KAAK,CAAE,cAAaP,EAAG,UAAlB,EAA4B;MAC7BW,MAAM,EAAC,QADsB;MAE7BC,OAAO,EAAE;QACL,gBAAe;MADV;IAFoB,CAA5B,CAAL;IAMAK,QAAQ,CAAC,GAAD,CAAR;EACD,CARD;;EASA,MAAMA,QAAQ,GAACvB,WAAW,EAA1B;;EACA,MAAMwB,YAAY,GAAC,MAAI;IACrB,IAAGlB,EAAE,KAAG,KAAL,IAAc,CAACG,IAAI,CAACU,IAAvB,EAA4B;MACxBM,EAAE;IACL;;IACDT,UAAU;IACVO,QAAQ,CAAC,GAAD,CAAR;EACD,CAND;;EAOA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAK,SAAS,EAAC,aAAf;MAAA,wBACG;QAAA,uBAAI,QAAC,SAAD;UAAW,OAAO,EAAEC;QAApB;UAAA;UAAA;UAAA;QAAA;MAAJ;QAAA;QAAA;QAAA;MAAA,QADH,EAEIlB,EAAE,KAAG,KAAL,gBAAa;QAAQ,OAAO,EAAEgB,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAb,gBAA4D;QAAQ,OAAO,EAAEA,UAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFhE;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAME;MAAU,QAAQ,EAAEI,CAAC,IAAE;QAAChB,OAAO,CAAC,EAAC,GAAGD,IAAJ;UAAS,QAAOiB,CAAC,CAACC,MAAF,CAASC;QAAzB,CAAD,CAAP;MAAyC,CAAjE;MAAmE,YAAY,EAAEnB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEU;IAAvF;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CAnDD;;GAAMf,S;UACWL,S,EAgCAC,W;;;KAjCXI,S;AAqDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}